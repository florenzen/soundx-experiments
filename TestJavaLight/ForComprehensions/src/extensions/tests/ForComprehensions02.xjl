package extensions.tests;

import extensions.ForComprehensions;
import javalight.lang.JLIterable;
import javalight.lang.JLInteger;
import javalight.util.JLIterator;
import javalight.util.LinkedList;

public class ForComprehensions02 {
  public LinkedList<JLInteger> enumerate(int from, int to) {
    LinkedList<JLInteger> list = new LinkedList<JLInteger>();
    while(to >= from) {
      list.addFirst(new JLInteger(to));
      to = to-1;
    }
    return list;
  }

  // for comprehension with generator and local binding
  public int sumEven(LinkedList<JLInteger> nums) {
    int result = 0;
    for(num <- nums;
        n = num.getVal())
      result = result + n;
    return result;
  }

  public boolean even(int n) {
    boolean result;
    if(n == 0)
      result = true;
    else
      result = odd(n-1);
    return result;
  }

  public boolean odd(int n) {
    boolean result;
    if(n == 0)
      result = false;
    else
      result = even(n-1);
    return result;
  }
}
