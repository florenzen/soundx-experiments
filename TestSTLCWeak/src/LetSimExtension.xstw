module LetSimExtension;

import LetSeqExtension;

extension {
  context-free syntax
    "let" SimBindings "in" Term -> Term {cons("LetSim")}

  context-free syntax
    Binding "|" Binding     -> SimBindings
    Binding "|" SimBindings -> SimBindings

  context-free priorities
    { Term Term                   -> Term
      Term "+" Term               -> Term } >
      "let" SimBindings "in" Term -> Term

  inductive definitions
    T-LetSim1:
      (C |- t1 : T1) (C |- t2 : T2) (C,x1:T1,x2:T2 |- t : T)
      ------------------------------------------------------
      C |- let x1 = t1 | x2 = t2 in t : T
    T-LetSim2:
      (C |- t1 : T1) (C |- t2 : T2) (C |- t3 : T3) (C,x1:T1,x2:T2,x3:T3 |- t : T)
      ---------------------------------------------------------------------------
      C |- let x1 = t1 | x2 = t2 | x3 = t3 in t : T
    T-LetSim3:
      (C |- t1 : T1) (C |- t2 : T2) (C |- t3 : T3) (C |- t4 : T4) (C,x1:T1,x2:T2,x3:T3,x4:T4 |- t : T)
      ------------------------------------------------------------------------------------------------
      C |- let x1 = t1 | x2 = t2 | x3 = t3 | x4 = t4 in t : T

  desugarings
    { (C |- t1 : T1) (C |- t2 : T2) (C,x1:T1,x2:T2 |- t : T)
      ------------------------------------------------------
      C |- [ let x1 = t1 | x2 = t2 in t ] : T
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>
      (\x1:T1.\x2:T2. t) t1 t2 }
    { (C |- t1 : T1) (C |- t2 : T2) (C |- t3 : T3) (C,x1:T1,x2:T2,x3:T3 |- t : T)
      ---------------------------------------------------------------------------
      C |- [ let x1 = t1 | x2 = t2 | x3 = t3 in t ] : T
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>
      (\x1:T1.\x2:T2.\x3:T3. t) t1 t2 t3 }
    { (C |- t1 : T1) (C |- t2 : T2) (C |- t3 : T3) (C |- t4 : T4) (C,x1:T1,x2:T2,x3:T3,x4:T4 |- t : T)
      ------------------------------------------------------------------------------------------------
      C |- [ let x1 = t1 | x2 = t2 | x3 = t3 | x4 = t4 in t ] : T
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>
      (\x1:T1.\x2:T2.\x3:T3.\x4:T4. t) t1 t2 t3 t4 }
}
